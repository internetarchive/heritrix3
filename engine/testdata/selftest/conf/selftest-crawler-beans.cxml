<?xml version="1.0" encoding="UTF-8"?>
<beans 
  xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:aop="http://www.springframework.org/schema/aop"
  xmlns:tx="http://www.springframework.org/schema/tx"
  xsi:schemaLocation="
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">
 
 <context:annotation-config/>
 
 <bean id="simpleOverrides" 
   class="org.springframework.beans.factory.config.PropertyOverrideConfigurer">
  <property name="properties">
   <value>

metadata.operatorContactUrl=@@URL_VALUE@@
seeds.textSource.value=@@SEEDS_VALUE@@
# only self-crawling, so go fast and avoid pause-at-start
disposition.maxDelayMs=50
crawlController.pauseAtStart=false
@@MORE_PROPERTIES@@

   </value>
  </property>
 </bean>

 <!-- Crawl metadata, including identification of crawler/operator -->
 <bean id="metadata" class="org.archive.modules.CrawlMetadata" autowire="byName">
  <property name="description" value="Crawl based on selftest template"/>
  <property name="jobName" value="selftest"/>
  <property name="operatorContactUrl" value="USE_AN_URL_WITH_CONTACT_INFO_HERE_FOR_WEBMASTERS_AFFECTED_BY_YOUR_CRAWL"/>
 </bean>
 
 <!-- Seeds: crawl starting points -->
 <bean id="seeds" class="org.archive.modules.seeds.TextSeedModule">
  <property name="textSource">
   <bean class="org.archive.spring.ConfigString">
    <property name="value" value="# OVERRIDE_THIS_WITH_SEEDS"/>
   </bean>
  </property>
  <property name="sourceTagSeeds" value="true"/>
 </bean>
 
 <!-- Scope: what discovered URIs to crawl -->
 <bean id="scope" class="org.archive.modules.deciderules.DecideRuleSequence">
  <property name="rules">
   <list>
    <bean class="org.archive.modules.deciderules.RejectDecideRule">
    </bean>
    <bean class="org.archive.modules.deciderules.surt.SurtPrefixedDecideRule" autowire="byName">
    </bean>
    <bean class="org.archive.modules.deciderules.TooManyHopsDecideRule">
    </bean>
    <bean class="org.archive.modules.deciderules.TransclusionDecideRule">
    </bean>
    <bean class="org.archive.modules.deciderules.PathologicalPathDecideRule">
    </bean>
    <bean class="org.archive.modules.deciderules.TooManyPathSegmentsDecideRule">
    </bean>
    <bean class="org.archive.modules.deciderules.PrerequisiteAcceptDecideRule">
    </bean>
   </list>
  </property>
 </bean>
 
 <!-- Processors as named beans; assembled into FetchChain later --> 
 <bean id="preselector" class="org.archive.crawler.prefetch.Preselector">
 </bean>
 <bean id="preconditionEnforcer" class="org.archive.crawler.prefetch.PreconditionEnforcer">
 </bean>
 <bean id="fetchDns" class="org.archive.modules.fetcher.FetchDNS">
 </bean>
 <bean id="fetchHttp" class="org.archive.modules.fetcher.FetchHTTP">
 </bean>
 <bean id="extractorHttp" class="org.archive.modules.extractor.ExtractorHTTP">
 </bean>
 <bean id="extractorHtml" class="org.archive.modules.extractor.ExtractorHTML">
 </bean>
 <bean id="extractorCss" class="org.archive.modules.extractor.ExtractorCSS">
 </bean> 
 <bean id="extractorJs" class="org.archive.modules.extractor.ExtractorJS">
 </bean>
 <bean id="extractorSwf" class="org.archive.modules.extractor.ExtractorSWF">
 </bean>    
 <bean id="arcWriterProcessor" class="org.archive.modules.writer.ARCWriterProcessor">
  <property name="directory" value="." /> <!-- make logs easy to find  for test verification -->
 </bean>
 
  <!-- Processors as named beans; assembled into DispositionChain later --> 
 <bean id="disposition" class="org.archive.crawler.postprocessor.DispositionProcessor">
 </bean>
  <bean id="candidatesProcessor" class="org.archive.crawler.postprocessor.CandidatesProcessor">
 </bean>
    
<!-- Processors as named beans; assembled into CandidateChain later --> 
 <bean id="candidateScoper" class="org.archive.crawler.prefetch.CandidateScoper">
 </bean>
 <bean id="preparer" class="org.archive.crawler.prefetch.FrontierPreparer">
 </bean>


<bean id="candidateProcessors" class="org.archive.modules.CandidateChain">
  <property name="processors">
   <list>
    <ref bean="candidateScoper"/>
    <ref bean="preparer"/>
   </list>
  </property>
 </bean>

 <bean id="fetchProcessors" class="org.archive.modules.FetchChain">
  <property name="processors">
   <list>
    <ref bean="preselector"/>
    <ref bean="preconditionEnforcer"/>
    <ref bean="fetchDns"/>
    <ref bean="fetchHttp"/>
    <ref bean="extractorHttp"/>
    <ref bean="extractorHtml"/>
    <ref bean="extractorCss"/>
    <ref bean="extractorJs"/>
    <ref bean="extractorSwf"/>
    <!--@@MORE_EXTRACTORS@@-->
    <ref bean="arcWriterProcessor"/>
   </list>
  </property>
 </bean>

<bean id="dispositionProcessors" class="org.archive.modules.DispositionChain">
  <property name="processors">
   <list>
    <ref bean="disposition"/>
    <ref bean="candidatesProcessor"/>
   </list>
  </property>
 </bean>
 
 <!-- http or form login credentials -->
 <bean id="credentialStore" 
   class="org.archive.modules.credential.CredentialStore">
 </bean>
 
 <bean id="frontier" 
   class="org.archive.crawler.frontier.BdbFrontier" autowire="byName">
  <!--@@FRONTIER_PROPERTIES@@-->
 </bean>
 
 <bean id="uriUniqFilter" 
   class="org.archive.crawler.util.BdbUriUniqFilter" autowire="byName">
 </bean>
 
 <bean id="crawlController" 
   class="org.archive.crawler.framework.CrawlController" autowire="byName">
 </bean>
 
 <bean id="configPathConfigurer" 
   class="org.archive.spring.ConfigPathConfigurer">
 </bean>
  
 <!--@@BEANS_MOREBEANS@@-->
 
 <!-- IT WILL BE VERY RARE TO REPLACE OR CONFIGURE THE BELOW BEANS -->

 <!-- standard stats/reporting collector -->
 <bean id="statisticsTracker" 
   class="org.archive.crawler.reporting.StatisticsTracker" autowire="byName">
 </bean>
 
 <!-- Shared logging facility -->
 <bean id="loggerModule" 
   class="org.archive.crawler.reporting.CrawlerLoggerModule">
   <property name="path" value="logs" /> <!-- make logs easy to find  for test verification -->
 </bean>
 
 <!-- manager of sheets of contextual overlays; autowired to include
      any SheetForSurtPrefix or SheetForDecideRuled beans -->
 <bean id="sheetOverlaysManager" 
   class="org.archive.crawler.spring.SheetOverlaysManager" autowire="byType">
 </bean>

 <!--  shared BDB manager -->
 <bean id="bdb" class="org.archive.bdb.BdbModule">
 </bean>
 
 <!-- cookie storage for FetchHTTP -->
 <bean id="cookieStore" class="org.archive.modules.fetcher.BdbCookieStore">
 </bean>
 
 <!-- shared cache of server/host info -->
 <bean id="serverCache" class="org.archive.modules.net.BdbServerCache">
 </bean>
 
</beans>
